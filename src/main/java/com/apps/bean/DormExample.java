package com.apps.bean;

import java.util.ArrayList;
import java.util.List;

public class DormExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public DormExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDorIdIsNull() {
            addCriterion("dor_id is null");
            return (Criteria) this;
        }

        public Criteria andDorIdIsNotNull() {
            addCriterion("dor_id is not null");
            return (Criteria) this;
        }

        public Criteria andDorIdEqualTo(String value) {
            addCriterion("dor_id =", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdNotEqualTo(String value) {
            addCriterion("dor_id <>", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdGreaterThan(String value) {
            addCriterion("dor_id >", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdGreaterThanOrEqualTo(String value) {
            addCriterion("dor_id >=", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdLessThan(String value) {
            addCriterion("dor_id <", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdLessThanOrEqualTo(String value) {
            addCriterion("dor_id <=", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdLike(String value) {
            addCriterion("dor_id like", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdNotLike(String value) {
            addCriterion("dor_id not like", value, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdIn(List<String> values) {
            addCriterion("dor_id in", values, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdNotIn(List<String> values) {
            addCriterion("dor_id not in", values, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdBetween(String value1, String value2) {
            addCriterion("dor_id between", value1, value2, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorIdNotBetween(String value1, String value2) {
            addCriterion("dor_id not between", value1, value2, "dorId");
            return (Criteria) this;
        }

        public Criteria andDorQuaIsNull() {
            addCriterion("dor_qua is null");
            return (Criteria) this;
        }

        public Criteria andDorQuaIsNotNull() {
            addCriterion("dor_qua is not null");
            return (Criteria) this;
        }

        public Criteria andDorQuaEqualTo(String value) {
            addCriterion("dor_qua =", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaNotEqualTo(String value) {
            addCriterion("dor_qua <>", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaGreaterThan(String value) {
            addCriterion("dor_qua >", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaGreaterThanOrEqualTo(String value) {
            addCriterion("dor_qua >=", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaLessThan(String value) {
            addCriterion("dor_qua <", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaLessThanOrEqualTo(String value) {
            addCriterion("dor_qua <=", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaLike(String value) {
            addCriterion("dor_qua like", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaNotLike(String value) {
            addCriterion("dor_qua not like", value, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaIn(List<String> values) {
            addCriterion("dor_qua in", values, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaNotIn(List<String> values) {
            addCriterion("dor_qua not in", values, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaBetween(String value1, String value2) {
            addCriterion("dor_qua between", value1, value2, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorQuaNotBetween(String value1, String value2) {
            addCriterion("dor_qua not between", value1, value2, "dorQua");
            return (Criteria) this;
        }

        public Criteria andDorCostIsNull() {
            addCriterion("dor_cost is null");
            return (Criteria) this;
        }

        public Criteria andDorCostIsNotNull() {
            addCriterion("dor_cost is not null");
            return (Criteria) this;
        }

        public Criteria andDorCostEqualTo(Double value) {
            addCriterion("dor_cost =", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostNotEqualTo(Double value) {
            addCriterion("dor_cost <>", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostGreaterThan(Double value) {
            addCriterion("dor_cost >", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostGreaterThanOrEqualTo(Double value) {
            addCriterion("dor_cost >=", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostLessThan(Double value) {
            addCriterion("dor_cost <", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostLessThanOrEqualTo(Double value) {
            addCriterion("dor_cost <=", value, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostIn(List<Double> values) {
            addCriterion("dor_cost in", values, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostNotIn(List<Double> values) {
            addCriterion("dor_cost not in", values, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostBetween(Double value1, Double value2) {
            addCriterion("dor_cost between", value1, value2, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorCostNotBetween(Double value1, Double value2) {
            addCriterion("dor_cost not between", value1, value2, "dorCost");
            return (Criteria) this;
        }

        public Criteria andDorNumIsNull() {
            addCriterion("dor_num is null");
            return (Criteria) this;
        }

        public Criteria andDorNumIsNotNull() {
            addCriterion("dor_num is not null");
            return (Criteria) this;
        }

        public Criteria andDorNumEqualTo(Integer value) {
            addCriterion("dor_num =", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumNotEqualTo(Integer value) {
            addCriterion("dor_num <>", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumGreaterThan(Integer value) {
            addCriterion("dor_num >", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("dor_num >=", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumLessThan(Integer value) {
            addCriterion("dor_num <", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumLessThanOrEqualTo(Integer value) {
            addCriterion("dor_num <=", value, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumIn(List<Integer> values) {
            addCriterion("dor_num in", values, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumNotIn(List<Integer> values) {
            addCriterion("dor_num not in", values, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumBetween(Integer value1, Integer value2) {
            addCriterion("dor_num between", value1, value2, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorNumNotBetween(Integer value1, Integer value2) {
            addCriterion("dor_num not between", value1, value2, "dorNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumIsNull() {
            addCriterion("dor_in_num is null");
            return (Criteria) this;
        }

        public Criteria andDorInNumIsNotNull() {
            addCriterion("dor_in_num is not null");
            return (Criteria) this;
        }

        public Criteria andDorInNumEqualTo(Integer value) {
            addCriterion("dor_in_num =", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumNotEqualTo(Integer value) {
            addCriterion("dor_in_num <>", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumGreaterThan(Integer value) {
            addCriterion("dor_in_num >", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("dor_in_num >=", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumLessThan(Integer value) {
            addCriterion("dor_in_num <", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumLessThanOrEqualTo(Integer value) {
            addCriterion("dor_in_num <=", value, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumIn(List<Integer> values) {
            addCriterion("dor_in_num in", values, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumNotIn(List<Integer> values) {
            addCriterion("dor_in_num not in", values, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumBetween(Integer value1, Integer value2) {
            addCriterion("dor_in_num between", value1, value2, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorInNumNotBetween(Integer value1, Integer value2) {
            addCriterion("dor_in_num not between", value1, value2, "dorInNum");
            return (Criteria) this;
        }

        public Criteria andDorHouidIsNull() {
            addCriterion("dor_houid is null");
            return (Criteria) this;
        }

        public Criteria andDorHouidIsNotNull() {
            addCriterion("dor_houid is not null");
            return (Criteria) this;
        }

        public Criteria andDorHouidEqualTo(String value) {
            addCriterion("dor_houid =", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidNotEqualTo(String value) {
            addCriterion("dor_houid <>", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidGreaterThan(String value) {
            addCriterion("dor_houid >", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidGreaterThanOrEqualTo(String value) {
            addCriterion("dor_houid >=", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidLessThan(String value) {
            addCriterion("dor_houid <", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidLessThanOrEqualTo(String value) {
            addCriterion("dor_houid <=", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidLike(String value) {
            addCriterion("dor_houid like", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidNotLike(String value) {
            addCriterion("dor_houid not like", value, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidIn(List<String> values) {
            addCriterion("dor_houid in", values, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidNotIn(List<String> values) {
            addCriterion("dor_houid not in", values, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidBetween(String value1, String value2) {
            addCriterion("dor_houid between", value1, value2, "dorHouid");
            return (Criteria) this;
        }

        public Criteria andDorHouidNotBetween(String value1, String value2) {
            addCriterion("dor_houid not between", value1, value2, "dorHouid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dorm
     *
     * @mbg.generated do_not_delete_during_merge Thu Mar 05 18:28:22 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dorm
     *
     * @mbg.generated Thu Mar 05 18:28:22 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}